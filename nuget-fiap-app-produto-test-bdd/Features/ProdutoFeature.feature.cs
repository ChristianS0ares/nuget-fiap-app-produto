// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace nuget_fiap_app_produto_test_bdd.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class GerenciamentoDeProdutosDeLanchoneteFeature : object, Xunit.IClassFixture<GerenciamentoDeProdutosDeLanchoneteFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "ProdutoFeature.feature"
#line hidden
        
        public GerenciamentoDeProdutosDeLanchoneteFeature(GerenciamentoDeProdutosDeLanchoneteFeature.FixtureData fixtureData, nuget_fiap_app_produto_test_bdd_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Features", "Gerenciamento de Produtos de Lanchonete", @"    Como um usu�rio da API
    Eu quero gerenciar produtos de uma lanchonete

Cen�rio: Obter todos os produtos
    Dado que eu adicionei um produto com o nome ""Hamb�rguer Especial"" e pre�o ""25.50""
    Quando eu solicito a lista de produtos
    Ent�o eu devo receber uma lista contendo o produto ""Hamb�rguer Especial""

Cen�rio: Adicionar um novo produto
    Quando que eu adiciono um produto com o nome ""Batata Frita Grande"" e pre�o ""15.00""
    Ent�o o produto ""Batata Frita Grande"" deve ser adicionado com sucesso

Cen�rio: Obter produto por ID
    Dado que eu adicionei um produto com o nome ""Milkshake de Chocolate"" e pre�o ""12.00""
    Quando eu solicito o produto pelo seu ID
    Ent�o eu devo receber o produto ""Milkshake de Chocolate""

Cen�rio: Atualizar um produto existente
    Dado que eu adicionei um novo produto com o nome ""Caf� Pequeno""
    Quando eu atualizo o produto ""Caf� Pequeno"" para ter o nome ""Caf� Grande"" e pre�o ""6.00""
    Quando eu solicito o produto pelo seu ID
    Ent�o eu devo receber o produto com o nome ""Caf� Grande""

Cen�rio: Excluir um produto
    Dado que eu adicionei o produto com o nome ""Sundae de Morango""
    Quando eu excluo o produto ""Sundae de Morango""
    Ent�o o produto ""Sundae de Morango"" n�o deve mais existir", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                GerenciamentoDeProdutosDeLanchoneteFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                GerenciamentoDeProdutosDeLanchoneteFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
